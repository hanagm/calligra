From 7a47971fa4d576b0d8b4231e64a5d8567a539f12 Mon Sep 17 00:00:00 2001
From: Damien Caliste <dcaliste@free.fr>
Date: Tue, 11 Dec 2018 13:25:21 +0100
Subject: [PATCH 07/11] Disable various dependencies in sheets.

---
 sheets/CalculationSettings.cpp            |  6 ++--
 sheets/commands/AbstractRegionCommand.cpp | 14 ++++-----
 sheets/commands/SpellCheckCommand.cpp     | 26 ++++++++--------
 sheets/commands/SpellCheckCommand.h       |  2 +-
 sheets/dialogs/DocumentSettingsDialog.cpp |  2 +-
 sheets/dialogs/LinkDialog.cpp             | 22 +++++++-------
 sheets/part/dialogs/PreferenceDialog.cpp  | 36 +++++++++++++----------
 sheets/ui/CellToolBase.cpp                | 12 ++++----
 sheets/ui/HyperlinkStrategy.cpp           |  4 +++
 9 files changed, 66 insertions(+), 58 deletions(-)

diff --git a/sheets/CalculationSettings.cpp b/sheets/CalculationSettings.cpp
index 1717c37372a..c6d685ff133 100644
--- a/sheets/CalculationSettings.cpp
+++ b/sheets/CalculationSettings.cpp
@@ -64,7 +64,7 @@ public:
 CalculationSettings::CalculationSettings()
         : d(new Private)
 {
-    d->locale = new Localization();
+    // d->locale = new Localization();
     d->caseSensitiveComparisons = true;
     d->precisionAsShown         = false;
     d->wholeCellSearchCriteria  = true;
@@ -79,13 +79,13 @@ CalculationSettings::CalculationSettings()
 
 CalculationSettings::~CalculationSettings()
 {
-    delete d->locale;
+    // delete d->locale;
     delete d;
 }
 
 KLocale* CalculationSettings::locale() const
 {
-    return d->locale;
+    return 0; // d->locale;
 }
 
 void CalculationSettings::setReferenceYear(int year)
diff --git a/sheets/commands/AbstractRegionCommand.cpp b/sheets/commands/AbstractRegionCommand.cpp
index 7d0872af390..808aff118c8 100644
--- a/sheets/commands/AbstractRegionCommand.cpp
+++ b/sheets/commands/AbstractRegionCommand.cpp
@@ -24,7 +24,7 @@
 #include <QApplication>
 
 #include <KLocalizedString>
-#include <kpassivepopup.h>
+// #include <kpassivepopup.h>
 
 #include <KoCanvasBase.h>
 
@@ -147,9 +147,9 @@ bool AbstractRegionCommand::isApproved() const
     const int begin = m_reverse ? elements.count() - 1 : 0;
     const int end = m_reverse ? -1 : elements.count();
     if (m_checkLock && m_sheet->cellStorage()->hasLockedCells(*this)) {
-        KPassivePopup::message(i18n("Processing is not possible, because some "
-                                    "cells are locked as elements of a matrix."),
-                               QApplication::activeWindow());
+        // KPassivePopup::message(i18n("Processing is not possible, because some "
+        //                             "cells are locked as elements of a matrix."),
+        //                        QApplication::activeWindow());
         return false;
     }
     if (m_sheet->isProtected()) {
@@ -160,9 +160,9 @@ bool AbstractRegionCommand::isApproved() const
                 for (int row = range.top(); row <= range.bottom(); ++row) {
                     Cell cell(m_sheet, col, row);
                     if (!cell.style().notProtected()) {
-                        KPassivePopup::message(i18n("Processing is not possible, "
-                                                    "because some cells are protected."),
-                                               QApplication::activeWindow());
+                        // KPassivePopup::message(i18n("Processing is not possible, "
+                        //                             "because some cells are protected."),
+                        //                        QApplication::activeWindow());
                         return false;
                     }
                 }
diff --git a/sheets/commands/SpellCheckCommand.cpp b/sheets/commands/SpellCheckCommand.cpp
index 356427655ee..20080b5c24f 100644
--- a/sheets/commands/SpellCheckCommand.cpp
+++ b/sheets/commands/SpellCheckCommand.cpp
@@ -31,8 +31,8 @@
 #include <KoCanvasBase.h>
 
 #include <kmessagebox.h>
-#include <sonnet/dialog.h>
-#include <sonnet/speller.h>
+// #include <sonnet/dialog.h>
+// #include <sonnet/speller.h>
 
 using namespace Calligra::Sheets;
 
@@ -45,8 +45,8 @@ public:
     Cell currentCell;
     Sheet* currentSheet;
     ValueStorage storage;
-    Sonnet::Speller speller;
-    Sonnet::Dialog* dialog;
+    // Sonnet::Speller speller;
+    // Sonnet::Dialog* dialog;
     KUndo2Command* command;
 };
 
@@ -65,19 +65,19 @@ SpellCheckCommand::SpellCheckCommand(const Region &region, KoCanvasBase* canvasB
         // only take the selection
         d->storage = d->currentSheet->valueStorage()->subStorage(region);
     }
-    setSpeller(d->speller);
-    d->dialog = new Sonnet::Dialog(this, canvasBase->canvasWidget());
+    // setSpeller(d->speller);
+    // d->dialog = new Sonnet::Dialog(this, canvasBase->canvasWidget());
     d->command = 0;
 
     connect(this, SIGNAL(done()),
             this, SLOT(finishCommand()));
-    connect(d->dialog, SIGNAL(replace(QString,int,QString)),
-            this, SLOT(replace(QString,int,QString)));
+    // connect(d->dialog, SIGNAL(replace(QString,int,QString)),
+    //         this, SLOT(replace(QString,int,QString)));
 }
 
 SpellCheckCommand::~SpellCheckCommand()
 {
-    delete d->dialog;
+    // delete d->dialog;
     delete d;
 }
 
@@ -123,16 +123,16 @@ QString SpellCheckCommand::fetchMoreText()
 
 void SpellCheckCommand::finishedCurrentFeed()
 {
-    if (d->dialog->originalBuffer() == d->dialog->buffer()) {
-        return;
-    }
+    // if (d->dialog->originalBuffer() == d->dialog->buffer()) {
+    //     return;
+    // }
     // TODO Stefan: KUndo2Command-based undo recording for CellStorage.
     if (!d->command) {
         d->command = new KUndo2Command(kundo2_i18n("Correct Misspelled Words"));
     }
     DataManipulator* command = new DataManipulator(d->command);
     command->setSheet(d->currentSheet);
-    command->setValue(Value(d->dialog->buffer()));
+    // command->setValue(Value(d->dialog->buffer()));
     command->setParsing(false);
     command->add(QPoint(d->currentCell.column(), d->currentCell.row()));
     command->setRegisterUndo(false);
diff --git a/sheets/commands/SpellCheckCommand.h b/sheets/commands/SpellCheckCommand.h
index 9c801d6fefe..478183e3142 100644
--- a/sheets/commands/SpellCheckCommand.h
+++ b/sheets/commands/SpellCheckCommand.h
@@ -20,7 +20,7 @@
 #ifndef CALLIGRA_SHEETS_SPELLCHECK_COMMAND
 #define CALLIGRA_SHEETS_SPELLCHECK_COMMAND
 
-#include <sonnet/backgroundchecker.h>
+// #include <sonnet/backgroundchecker.h>
 
 class KoCanvasBase;
 
diff --git a/sheets/dialogs/DocumentSettingsDialog.cpp b/sheets/dialogs/DocumentSettingsDialog.cpp
index 39ccd69f6a9..266928f445d 100644
--- a/sheets/dialogs/DocumentSettingsDialog.cpp
+++ b/sheets/dialogs/DocumentSettingsDialog.cpp
@@ -39,7 +39,7 @@
 
 #include <KoVBox.h>
 
-#include <sonnet/configwidget.h>
+// #include <sonnet/configwidget.h>
 
 #include <KoIcon.h>
 #include "CalculationSettings.h"
diff --git a/sheets/dialogs/LinkDialog.cpp b/sheets/dialogs/LinkDialog.cpp
index 50c94e4dcbc..537ae85f5b3 100644
--- a/sheets/dialogs/LinkDialog.cpp
+++ b/sheets/dialogs/LinkDialog.cpp
@@ -43,8 +43,8 @@
 #include <kmessagebox.h>
 #include <KLocalizedString>
 #include <krecentdocument.h>
-#include <kurlrequester.h>
-#include <kurlcompletion.h>
+//#include <kurlrequester.h>
+//#include <kurlcompletion.h>
 
 using namespace Calligra::Sheets;
 
@@ -61,7 +61,7 @@ public:
     KLineEdit* mailSubject;
     QWidget* filePage;
     KLineEdit* fileText;
-    KUrlRequester* fileLink;
+    // KUrlRequester* fileLink;
     QWidget* cellPage;
     KLineEdit* cellText;
     KComboBox* cellLink;
@@ -120,10 +120,10 @@ LinkDialog::LinkDialog(QWidget* parent, Selection* selection)
     d->fileText = new KLineEdit(d->filePage);
     fLayout->addWidget(d->fileText);
     fLayout->addWidget(new QLabel(i18n("File location:"), d->filePage));
-    d->fileLink = new KUrlRequester(d->filePage);
-    d->fileLink->completionObject()->setReplaceHome(true);
-    d->fileLink->completionObject()->setReplaceEnv(true);
-    fLayout->addWidget(d->fileLink);
+    // d->fileLink = new KUrlRequester(d->filePage);
+    // d->fileLink->completionObject()->setReplaceHome(true);
+    // d->fileLink->completionObject()->setReplaceEnv(true);
+    // fLayout->addWidget(d->fileLink);
     fLayout->addWidget(new QLabel(i18n("Recent file:"), d->filePage));
     KComboBox* recentFile = new KComboBox(d->filePage);
     recentFile->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Fixed);
@@ -132,8 +132,8 @@ LinkDialog::LinkDialog(QWidget* parent, Selection* selection)
     fLayout->addItem(new QSpacerItem(0, 40, QSizePolicy::Minimum, QSizePolicy::MinimumExpanding));
     connect(d->fileText, SIGNAL(textChanged(QString)), this,
             SLOT(setText(QString)));
-    QObject::connect(recentFile, SIGNAL(highlighted(QString)),
-                     d->fileLink->lineEdit(), SLOT(setText(QString)));
+    // QObject::connect(recentFile, SIGNAL(highlighted(QString)),
+    //                  d->fileLink->lineEdit(), SLOT(setText(QString)));
 
     // populate recent files
     int index = 0;
@@ -210,7 +210,7 @@ QString LinkDialog::link() const
         if (! subject.isEmpty())
             str.append(QString("?subject=%1").arg(QString(QUrl::toPercentEncoding(subject))));
     } else if (currentPage() == d->p3) {
-        QUrl url = d->fileLink->url();
+      QUrl url; // = d->fileLink->url();
         if (url.isValid()) {
             str = url.url();
         } else {
@@ -284,7 +284,7 @@ void LinkDialog::setLink(const QString& link)
     if (link.startsWith(QLatin1String("file:/"))) {
         QString s = link.mid(6);
         while (s.startsWith(QLatin1String("//"))) s.remove(0, 1);
-        d->fileLink->lineEdit()->setText(s);
+        // d->fileLink->lineEdit()->setText(s);
         setCurrentPage(d->p3);
         return;
     }
diff --git a/sheets/part/dialogs/PreferenceDialog.cpp b/sheets/part/dialogs/PreferenceDialog.cpp
index d3c09e3aca8..e013789035e 100644
--- a/sheets/part/dialogs/PreferenceDialog.cpp
+++ b/sheets/part/dialogs/PreferenceDialog.cpp
@@ -44,11 +44,11 @@
 
 #include <KPluginMetaData>
 #include <KPluginInfo>
-#include <KPluginSelector>
+//#include <KPluginSelector>
 #include <ksharedconfig.h>
-#include <sonnet/configwidget.h>
+// #include <sonnet/configwidget.h>
 
-#include <KoConfigAuthorPage.h>
+// #include <KoConfigAuthorPage.h>
 #include <KoUnit.h>
 #include <KoComponentData.h>
 
@@ -92,13 +92,13 @@ public:
     bool oldCreateBackupFile;
 
     // Plugin Options
-    KPluginSelector* pluginSelector;
+    // KPluginSelector* pluginSelector;
 
     // Spellchecker Options
-    Sonnet::ConfigWidget* spellCheckPage;
+    // Sonnet::ConfigWidget* spellCheckPage;
 
     // Author Options
-    KoConfigAuthorPage *authorPage;
+    // KoConfigAuthorPage *authorPage;
 
 public:
     // Interface Options
@@ -358,6 +358,7 @@ PreferenceDialog::PreferenceDialog(View* view)
     d->resetOpenSaveOptions(); // initialize values
 
     // Plugin Options Widget
+#ifdef HAVE_KPLUGIN
     d->pluginSelector = new KPluginSelector(this);
     const QList<KPluginInfo> functionPluginInfos = pluginInfos(QStringLiteral("calligrasheets/functions"));
     const QList<KPluginInfo> toolPluginInfos = pluginInfos(QStringLiteral("calligrasheets/tools"));
@@ -370,9 +371,11 @@ PreferenceDialog::PreferenceDialog(View* view)
     page->setIcon(koIcon("preferences-plugin"));
     addPage(page);
     d->pluginPage = page;
+#endif
 
     // Spell Checker Options
     KSharedConfig::Ptr sharedConfigPtr = Factory::global().config();
+#ifdef HAVE_SONNET
     d->spellCheckPage = new Sonnet::ConfigWidget(this);
     page = new KPageWidgetItem(d->spellCheckPage, i18n("Spelling"));
     page->setIcon(koIcon("tools-check-spelling"));
@@ -385,6 +388,7 @@ PreferenceDialog::PreferenceDialog(View* view)
     page = addPage(d->authorPage, i18nc("@title:tab Author page", "Author"));
     page->setHeader(i18n("Author"));
     page->setIcon(koIcon("user-identity"));
+#endif
 }
 
 PreferenceDialog::~PreferenceDialog()
@@ -410,12 +414,12 @@ void PreferenceDialog::slotApply()
     d->applyOpenSaveOptions();
 
     // Plugin Options
-    d->pluginSelector->save();
-    FunctionModuleRegistry::instance()->loadFunctionModules();
+    // d->pluginSelector->save();
+    // FunctionModuleRegistry::instance()->loadFunctionModules();
 
-    d->spellCheckPage->save();
+    // d->spellCheckPage->save();
 
-    d->authorPage->apply();
+    // d->authorPage->apply();
 
     // The changes affect the document, not just a single view,
     // so all user interfaces have to be updated.
@@ -428,10 +432,10 @@ void PreferenceDialog::slotDefault()
         d->defaultInterfaceOptions();
     } else if (currentPage() == d->page3) {
         d->defaultOpenSaveOptions();
-    } else if (currentPage() == d->page4) {
-        d->spellCheckPage->slotDefault();
-    } else if (currentPage() == d->pluginPage) {
-        d->pluginSelector->load();
+    // } else if (currentPage() == d->page4) {
+    //     d->spellCheckPage->slotDefault();
+    // } else if (currentPage() == d->pluginPage) {
+    //     d->pluginSelector->load();
     }
 }
 
@@ -443,8 +447,8 @@ void PreferenceDialog::slotReset()
         d->resetOpenSaveOptions();
     } else if (currentPage() == d->page4) {
         // TODO
-    } else if (currentPage() == d->pluginPage) {
-        d->pluginSelector->load();
+    // } else if (currentPage() == d->pluginPage) {
+    //     d->pluginSelector->load();
     }
 }
 
diff --git a/sheets/ui/CellToolBase.cpp b/sheets/ui/CellToolBase.cpp
index 6a38dc6edbc..51eee9a1e97 100644
--- a/sheets/ui/CellToolBase.cpp
+++ b/sheets/ui/CellToolBase.cpp
@@ -75,7 +75,7 @@
 #include "commands/PrecisionCommand.h"
 #include "commands/RowColumnManipulators.h"
 #include "commands/SortManipulator.h"
-#include "commands/SpellCheckCommand.h"
+// #include "commands/SpellCheckCommand.h"
 #include "commands/StyleCommand.h"
 #include "commands/ValidityCommand.h"
 
@@ -809,9 +809,9 @@ CellToolBase::CellToolBase(KoCanvasBase* canvas)
     connect(action, SIGNAL(triggered(bool)), this, SLOT(gotoCell()));
     action->setToolTip(i18n("Move to a particular cell"));
 
-    action = KStandardAction::spelling(this, SLOT(spellCheck()), this);
-    action->setToolTip(i18n("Check the spelling"));
-    addAction("tools_spelling", action);
+    // action = KStandardAction::spelling(this, SLOT(spellCheck()), this);
+    // action->setToolTip(i18n("Check the spelling"));
+    // addAction("tools_spelling", action);
 
     action = new QAction(koIconWanted("not used in UI, but devs might do, so nice to have", "inspector"), i18n("Run Inspector..."), this);
     addAction("inspector", action);
@@ -3402,8 +3402,8 @@ void CellToolBase::gotoCell()
 
 void CellToolBase::spellCheck()
 {
-    SpellCheckCommand* command = new SpellCheckCommand(*selection(), canvas());
-    command->start();
+    // SpellCheckCommand* command = new SpellCheckCommand(*selection(), canvas());
+    // command->start();
 }
 
 void CellToolBase::inspector()
diff --git a/sheets/ui/HyperlinkStrategy.cpp b/sheets/ui/HyperlinkStrategy.cpp
index 50b6667efe3..b9caa87eb64 100644
--- a/sheets/ui/HyperlinkStrategy.cpp
+++ b/sheets/ui/HyperlinkStrategy.cpp
@@ -29,7 +29,9 @@
 #include <KoToolBase.h>
 
 #include <kmessagebox.h>
+#ifdef HAVE_KRUN
 #include <krun.h>
+#endif
 
 #include <QMimeDatabase>
 #include <QTimer>
@@ -95,6 +97,7 @@ void HyperlinkStrategy::finishInteraction(Qt::KeyboardModifiers modifiers)
     } else {
         const QString type = QMimeDatabase().mimeTypeForUrl(url).name();
         if (!Util::localReferenceAnchor(d->url)) {
+#ifdef HAVE_KRUN
             const bool executable = KRun::isExecutableFile(url, type);
             if (executable) {
                 const QString question = i18n("This link points to the program or script '%1'.\n"
@@ -109,6 +112,7 @@ void HyperlinkStrategy::finishInteraction(Qt::KeyboardModifiers modifiers)
                 }
             }
             new KRun(url, tool()->canvas()->canvasWidget(), 0);
+#endif
         }
     }
 
-- 
2.20.1

